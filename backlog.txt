Maybe more tests for base apply and rollback until
Better Logging
----------------------------------------------
Plugins
  - Catch Errors with plugin dir in command interface
  - Add for rollback
  - Add for code up
  - Add for code remove
  - Tests to ensure migrations are being called when they are supposed to be
    - migrations_start
    - migrations end
    - code start
    - code end

Hashing for DOS vs Unix line endings
SQL script parameters
Think - should missing code files be highlighted? Should there be a missing command for code?

Compile command to compile all stored procs
Fill integration tests for each DB.
Test generators for different DBs.
Test for Oracle set current_schema (manually tested and doesn't break anything)
----------------------------------------------
Parameters in SQL scripts
Global Parameters
----------------------------------------------
DAT files
Make password be hidden when typing it in from a promot on windows
Bad NLS_LANG setting causes a very strange error.
Tests to ensure error message is extracted for (1) migration error (2) rollback error (3) code compile (4) code blow up (at least partially tested)




Think about the migration workflow and the dates etc that are being set

Migration that fails to rollback makes it look like the migration failed has not been applied. 
Perhaps correct as the code is in limbo land, but not sure what the best thing to do with it is.

Missing migration for rollback, what happens and what about force?
  If a migration file is missing, it will error when rollback is applied.
  If force is used, it will still push on with the next rollback.

Applying lots of code or migration files is slow due to a new SQLPLUS connection 
each time. Think about how to batch many together (especially procedures).

